
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.7.0
 * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
 */
Prisma.prismaVersion = {
  client: "6.7.0",
  engine: "3cff47a7f5d65c3ea74883f1d736e41d68ce91ed"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.TickerScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.Stock_market_dataScalarFieldEnum = {
  id: 'id',
  id_ticker: 'id_ticker',
  date: 'date',
  open: 'open',
  high: 'high',
  low: 'low',
  close: 'close',
  volume: 'volume',
  adj_close: 'adj_close'
};

exports.Prisma.Cumulative_returnScalarFieldEnum = {
  id_ticker: 'id_ticker',
  date: 'date',
  cum_return_open: 'cum_return_open',
  cum_return_high: 'cum_return_high',
  cum_return_low: 'cum_return_low',
  cum_return_close: 'cum_return_close',
  cum_return_volume: 'cum_return_volume',
  cum_return_adj_close: 'cum_return_adj_close'
};

exports.Prisma.TrendingScalarFieldEnum = {
  id: 'id',
  id_ticker: 'id_ticker',
  date: 'date',
  trend: 'trend',
  trend_close: 'trend_close',
  trend_open: 'trend_open',
  trend_adj_close: 'trend_adj_close'
};

exports.Prisma.VolatilityScalarFieldEnum = {
  id: 'id',
  id_ticker: 'id_ticker',
  date: 'date',
  volatility: 'volatility',
  volatility_open: 'volatility_open',
  volatility_close: 'volatility_close',
  volatility_adj_close: 'volatility_adj_close'
};

exports.Prisma.Anomaly_predictionScalarFieldEnum = {
  id: 'id',
  id_ticker: 'id_ticker',
  date: 'date',
  anomaly_price: 'anomaly_price',
  anomaly_volume: 'anomaly_volume'
};

exports.Prisma.Ema_indicatorsScalarFieldEnum = {
  id: 'id',
  id_ticker: 'id_ticker',
  date: 'date',
  ema_5: 'ema_5',
  ema_10: 'ema_10',
  ema_20: 'ema_20',
  ema_50: 'ema_50',
  ema_100: 'ema_100',
  ema_200: 'ema_200'
};

exports.Prisma.Sma_indicatorsScalarFieldEnum = {
  id: 'id',
  id_ticker: 'id_ticker',
  date: 'date',
  sma_5: 'sma_5',
  sma_10: 'sma_10',
  sma_20: 'sma_20',
  sma_50: 'sma_50',
  sma_100: 'sma_100',
  sma_200: 'sma_200'
};

exports.Prisma.Rsi_indicatorsScalarFieldEnum = {
  id: 'id',
  id_ticker: 'id_ticker',
  date: 'date',
  rsi_5: 'rsi_5',
  rsi_10: 'rsi_10',
  rsi_20: 'rsi_20',
  rsi_50: 'rsi_50',
  rsi_100: 'rsi_100',
  rsi_200: 'rsi_200'
};

exports.Prisma.Macd_indicatorsScalarFieldEnum = {
  id: 'id',
  id_ticker: 'id_ticker',
  date: 'date',
  macd_5: 'macd_5',
  macd_10: 'macd_10',
  macd_20: 'macd_20',
  macd_50: 'macd_50',
  macd_100: 'macd_100',
  macd_200: 'macd_200'
};

exports.Prisma.Bollinger_indicatorsScalarFieldEnum = {
  id: 'id',
  id_ticker: 'id_ticker',
  date: 'date',
  bollinger_5: 'bollinger_5',
  bollinger_10: 'bollinger_10',
  bollinger_20: 'bollinger_20',
  bollinger_50: 'bollinger_50',
  bollinger_100: 'bollinger_100',
  bollinger_200: 'bollinger_200'
};

exports.Prisma.Indicators_technicalScalarFieldEnum = {
  id: 'id',
  id_ticker: 'id_ticker',
  date: 'date',
  rsi: 'rsi',
  macd: 'macd',
  bollinger: 'bollinger',
  sma: 'sma',
  ema: 'ema'
};

exports.Prisma.StatisticScalarFieldEnum = {
  id: 'id',
  id_ticker: 'id_ticker',
  date: 'date',
  avg_price: 'avg_price',
  avg_volume: 'avg_volume',
  median_price: 'median_price',
  median_volume: 'median_volume',
  min_price: 'min_price',
  min_volume: 'min_volume',
  max_price: 'max_price',
  max_volume: 'max_volume',
  std_price: 'std_price',
  std_volume: 'std_volume'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.TickerOrderByRelevanceFieldEnum = {
  name: 'name'
};

exports.Prisma.TrendingOrderByRelevanceFieldEnum = {
  trend: 'trend'
};


exports.Prisma.ModelName = {
  Ticker: 'Ticker',
  Stock_market_data: 'Stock_market_data',
  Cumulative_return: 'Cumulative_return',
  Trending: 'Trending',
  Volatility: 'Volatility',
  Anomaly_prediction: 'Anomaly_prediction',
  Ema_indicators: 'Ema_indicators',
  Sma_indicators: 'Sma_indicators',
  Rsi_indicators: 'Rsi_indicators',
  Macd_indicators: 'Macd_indicators',
  Bollinger_indicators: 'Bollinger_indicators',
  Indicators_technical: 'Indicators_technical',
  Statistic: 'Statistic'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
